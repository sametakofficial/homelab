services:
  gluetun:
    image: qmcgaw/gluetun:v3
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8081:8081/tcp # qbittorrent
    environment:
      - TZ=${TZ}
      - UPDATER_PERIOD=24h
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=${VPN_TYPE}
      - BLOCK_MALICIOUS=off
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - PORT_FORWARD_ONLY=on
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_UP_COMMAND=/bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8081/api/v2/app/setPreferences 2>&1'
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
    volumes:
      - /data/srv/docker/gluetun/config:/gluetun
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WEBUI_PORT=8081
    volumes:
      - /data/srv/docker/qbittorrent/config:/config
      - /data/srv/downloads:/downloads
    restart: unless-stopped
    network_mode: "service:gluetun"
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /srv/docker/jackett/config:/config
      - /srv/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.jackett.rule=Host(`jackett-beast.${DOMAIN}`)"
      - "traefik.http.routers.jackett.entrypoints=https"
      - "traefik.http.routers.jackett.tls.certresolver=cloudflare"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    networks:
      - proxy
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /srv/docker/sonarr/config:/config
      - /srv/media/tv:/tv
      - /srv/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr-beast.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.sonarr.tls.certresolver=cloudflare"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    networks:
      - proxy
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /srv/docker/radarr/config:/config
      - /srv/media/movies:/movies
      - /srv/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.radarr.rule=Host(`radarr-beast.${DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.radarr.tls.certresolver=cloudflare"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    networks:
      - proxy
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    deploy:
      resources:
        limits:
          memory: 16g
    ports:
      - "8096:8096"
    tmpfs:
      - /cache/transcodes:size=10G
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /data/srv/docker/jellyfin/config:/config
      - /data/srv/media:/media
      - /data/srv/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin-beast.${DOMAIN}`)"
      - "traefik.http.routers.jellyfin.entrypoints=https"
      - "traefik.http.routers.jellyfin.tls.certresolver=cloudflare"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    networks:
      - proxy
    restart: unless-stopped

  flexget:
    image: linuxserver/flexget
    container_name: flexget
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - FG_WEBUI_PASSWORD=${PASS}
      - FG_LOG_LEVEL=info
    volumes:
      - /srv/docker/flexget/config:/config
      - /srv/media:/media
      - /srv/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.flexget.rule=Host(`flexget-beast.${DOMAIN}`)"
      - "traefik.http.routers.flexget.entrypoints=https"
      - "traefik.http.routers.flexget.tls.certresolver=cloudflare"
      - "traefik.http.services.flexget.loadbalancer.server.port=5050"
    networks:
      - proxy
    restart: unless-stopped
  rechecker:
    build: .
    container_name: rechecker
    env_file:
      - ./.env      
    environment: 
      - PYTHONUNBUFFERED=1
    networks:
      - proxy
    restart: "no"
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    privileged: true           # <-- BU YENİ SATIRI EKLEYİN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - TZ=${TZ}
      - PLEX_CLAIM=claim-jYuyZsNzNbZW-3sHNbPC  # Eğer Plex hesabına bağlamak istersen
      - LAN_NETWORKS=172.18.0.0/16
    ports:
      - "32400:32400/tcp"  # Ana Web Arayüzü (En önemlisi bu)
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"

    volumes:
      - /srv/docker/plex/config:/config
      - /srv/media:/media          # medya erişimi (filmler/diziler)
      - /srv/downloads:/downloads  # indirme klasörü
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.plex.rule=Host(`plex-beast.${DOMAIN}`)"
      - "traefik.http.routers.plex.entrypoints=https"
      - "traefik.http.routers.plex.tls.certresolver=cloudflare"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    networks:
      - proxy
    restart: unless-stopped
networks:
  proxy:
    external: true
